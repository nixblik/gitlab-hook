find_package(Doxygen)


function(doxygen)
  set(oneValueArgs DOXYFILE)
  set(multiValueArgs SOURCES)
  cmake_parse_arguments(DOXYGEN "" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

  if(DOXYGEN_UNPARSED_ARGUMENTS)
    message(FATAL_ERROR "Invalid doxygen() arguments ${DOXYGEN_UNPARSED_ARGUMENTS}")
  endif()

  if(NOT DOXYGEN_DOXYFILE)
    message(FATAL_ERROR "Missing doxygen() DOXYFILE")
  endif()

  file(REAL_PATH ${DOXYGEN_DOXYFILE} DOXYGEN_DOXYFILE_PATH)
  file(RELATIVE_PATH DOXYGEN_DOXYFILE_RELPATH ${CMAKE_SOURCE_DIR} ${DOXYGEN_DOXYFILE_PATH})
  set(DOXYGEN_DOXYFILE_2 ${CMAKE_CURRENT_BINARY_DIR}/doxyfile)

  string(CONCAT DOXYGEN_DOXYFILE_2_CONTENT
    "OUTPUT_DIRECTORY=${CMAKE_CURRENT_BINARY_DIR}\n"
    "QUIET=YES\n"
    "@INCLUDE=${DOXYGEN_DOXYFILE_PATH}\n")
  file(GENERATE OUTPUT ${DOXYGEN_DOXYFILE_2} CONTENT ${DOXYGEN_DOXYFILE_2_CONTENT})

  add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/html
    COMMENT "Create doxygen documentation for ${DOXYGEN_DOXYFILE_RELPATH}"
    DEPENDS ${DOXYGEN_DOXYFILE_PATH} ${DOXYGEN_SOURCES}
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    COMMAND PROJECT_VERSION=${CMAKE_PROJECT_VERSION} ${DOXYGEN_EXECUTABLE} ${DOXYGEN_DOXYFILE_2}
    VERBATIM)

  add_custom_target(doc ALL
    SOURCES ${DOXYGEN_DOXYFILE} ${DOXYGEN_SOURCES}
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/html)
endfunction()
